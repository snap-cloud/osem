- provide :title, "#{@conference.title} Program"
= content_for :splash_nav do
  %li
    = link_to('Schedule', events_conference_schedule_path(@conference))

.container#program{ style: 'width :92%' }
  .row{style: 'padding-top: 1em'}
    = render partial: 'schedule_tabs', locals: { active: 'program' }

    %h1.text-center
      - if @favourites && current_user
        #{current_user.name}'s Program for #{@conference.title}
      - else
        Program for #{@conference.title}

    = render 'date_event_types', conference: @conference, favourites: @favourites

    .dropdown.program-dropdown
      %button.btn.btn-default.dropdown-toggle{ type: "button", 'data-toggle': "dropdown" }
        Dates
        %span.caret
      %ul.dropdown-menu
        - @dates.each do |date|
          %li.li-dropdown-program
            - new_date = current_user ? convert_timezone(date.to_datetime.change(hour: @conference.start_hour), @conference.timezone, current_user.timezone) || date : date
            = link_to new_date.strftime('%Y-%m-%d'), "##{new_date.strftime('%Y-%m-%d')}", class: "program-selector#{ ' no-events-day' unless @conference.program.any_event_for_this_date?(date) }"
        - if @unscheduled_events.any?
          %li.li-dropdown-program
            = link_to('Unscheduled', "#unscheduled", class: 'program-selector')

  - if @favourites && current_user && @events_schedules.empty?
    .row
      %strong
        You have no events on your agenda.
      %br
      %strong
        #{link_to 'View the full program', events_conference_schedule_path(@conference.short_title, favourites: false)} and add events to your schedule?


  .row
    / scheduled events
    :ruby
      prev_date, prev_time = nil
      display_tz = current_user&.timezone.presence || @conference.timezone

    / TODO-SNAPCON: Explore caching this.
    - @events_schedules.select { |es| es.event.parent_event.nil? }.each do |event_schedule|
      - event = event_schedule.event
      - start_time = convert_timezone(event_schedule.start_time, @conference.timezone, display_tz)

      - unless start_time.to_date.eql?(prev_date)
        .date-content
          %h2.date-title{ style: "margin: 0;" }
            %a{ name: start_time.to_date }
            = prev_date = start_time.to_date
          %a.pull-right{ title: "Go up", href: "#program" }
            %i.fa-solid.fa-angles-up.fa-lg{ 'aria-hidden': true }
      - if !start_time.eql?(prev_time)
        - prev_time = start_time
        %h3= start_time.strftime('%H:%M %p %Z')
      .col-12
        - cache [@program, event_schedule, event, current_user, event_schedule.happening_now?, '#scheduled#full#panel'] do
          .event-item{ data: { time: event_schedule.start_time.iso8601 }, id: dom_id(event) }
            = render 'event', event: event, event_schedule: event_schedule

    / confirmed events that are not scheduled
    - if @unscheduled_events.any?
      .col-12
        .date-content
          %h2.date-title#unscheduled{ style: "margin: 0;" }
            Unscheduled events
          %a.pull-right{ title: "Go up", href: "#program" }
            %i.fa-solid.fa-angles-up.fa-lg{ 'aria-hidden': true }
      - @unscheduled_events.each do |event|
        .col-xs-12.col-md-12
          .unscheduled-event
            - cache [@program, event, current_user, '#unscheduled#full#panel'] do
              = render 'event', event: event, event_schedule: nil
  %button.btn.btn-primary#current-event-btn{ type: "button" }
    Jump to Current Event

:javascript
  $('.program-selector').on('click', function(e) {
    $('.li-dropdown-program').removeClass('active');
  });

  $(document).ready(function(){
    tag = "#{ @tag }";
    if(tag !== ""){
      document.getElementById(tag).scrollIntoView();
    }

    updateFavouriteStatus({ events: #{@favourited_events}, loggedIn: #{current_user.present?} });
  });
